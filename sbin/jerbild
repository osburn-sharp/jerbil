#! /usr/bin/ruby
# Description
#
# Author:: Robert Sharp
# Copyright:: Copyright (c) 2010 Robert Sharp
# License:: Open Software Licence v3.0
#
# This software is licensed for use under the Open Software Licence v. 3.0
# The terms of this licence can be found at http://www.opensource.org/licenses/osl-3.0.php
# and in the file copyright.txt. Under the terms of this licence, all derivative works
# must themselves be licensed under the Open Software Licence v. 3.0
# 
# 

#
# Start the Jerbil Server
#

require 'jerbil'
require 'jerbil/server'
require 'jerbil/config'
require 'jerbil/version'
require 'jerbil/support'
require 'jelly'
require 'jeckyl'
require 'socket'
require 'drb'
require 'rubygems'
require 'daemons'
require 'optparse'

config_file = nil # let it be the default
daemonize = true
log_to_syslog = true
verbose = false
env = nil

OptionParser.new do |opts|

  opts.banner = "Usage: jerbild [opts]"
  opts.separator ""
  opts.separator " start the Jerbil Daemon"
  opts.separator ""

  opts.on("-n", "--no-daemon", "Do not daemonize") do
    daemonize = false
  end

  opts.on("-S", "--no-syslog", "Do not log to syslog") do
    log_to_syslog = false
  end

  opts.on("-c", "--config [file]", String, "use this config file to find Jerbil" ) do |cfile|
    if FileTest.readable?(cfile) then
      config_file = cfile
    else
      puts "Config file cannot be read."
      exit 1
    end
  end

  opts.on("-e", "--environment [TYPE]", [:prod, :test, :dev], "Select env (prod, test, dev), default is prod") do |e|
    env = e
  end

  opts.on("-V", "--verbose", "output more information about what is going on ") do
    verbose = true
  end

  opts.on("-h", "--help", "Provide Help") do |h|
    opts.separator ""
    puts opts
    exit 0
  end

end.parse!

puts "Starting the Jerbil Server (#{Jerbil::Ident})" if verbose

#options = Jerbil::Config.new(config_file)
#puts options.inspect if verbose
#
#servers = options[:servers]
#
#if env != :null then
#  server_env = env
#else
#  server_env = options[:environment] || :prod
#end

begin
  config = Jerbil.get_config(config_file)

  my_self = Jerbil.get_local_server(config)
rescue Jerbil::JerbilConfigError => err
  puts "Error in Jerbil Config File: #{err.message}"
  exit 1
rescue Jerbil::MissingServer
  puts "Failed to find a local server in the config file. Check environment settings"
  exit 1
end

# create a private key for jerbil
pkey = Jerbil::Support.create_private_key(:jerbil, config[:environment], config[:key_dir])
puts "Created Private Key" if verbose

# check the pid directory has been set
unless config[:pid_dir] then
  puts "You must provide a writeable pid_dir in the config file!"
  exit 1
end

if daemonize then
  puts "Daemonizing now" if verbose
  Daemons.daemonize
else
  puts "Running in the foreground" if verbose
end

servers = config.delete(:servers)

# prevent the server from generating syslogs
Jelly.disable_syslog unless log_to_syslog

$SAFE = 1 # using DRb, so prevent anything nasty

jerbild = Jerbil::Broker.new(my_self, servers, config, pkey)

DRb.start_service(my_self.drb_address, jerbild)

# now create the pid file
Jerbil::Support.write_pid_file(:jerbil, config[:environment], config[:pid_dir])

DRb.thread.join
